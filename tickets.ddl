-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-07-31 15:41:37 SELÈ
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



DROP TABLE balise CASCADE CONSTRAINTS;

DROP TABLE balise_group CASCADE CONSTRAINTS;

DROP TABLE balise_type CASCADE CONSTRAINTS;

DROP TABLE balise_type_balise CASCADE CONSTRAINTS;

DROP TABLE "comment" CASCADE CONSTRAINTS;

DROP TABLE comment_comment CASCADE CONSTRAINTS;

DROP TABLE comment_relationship CASCADE CONSTRAINTS;

DROP TABLE contact_info CASCADE CONSTRAINTS;

DROP TABLE conversation CASCADE CONSTRAINTS;

DROP TABLE department CASCADE CONSTRAINTS;

DROP TABLE department_contact_info CASCADE CONSTRAINTS;

DROP TABLE email CASCADE CONSTRAINTS;

DROP TABLE employee CASCADE CONSTRAINTS;

DROP TABLE employee_ticket_assigned CASCADE CONSTRAINTS;

DROP TABLE feature CASCADE CONSTRAINTS;

DROP TABLE feature_type CASCADE CONSTRAINTS;

DROP TABLE change_log CASCADE CONSTRAINTS;

DROP TABLE incident CASCADE CONSTRAINTS;

DROP TABLE incident_leg CASCADE CONSTRAINTS;

DROP TABLE incident_rbc CASCADE CONSTRAINTS;

DROP TABLE job_position CASCADE CONSTRAINTS;

DROP TABLE kmc CASCADE CONSTRAINTS;

DROP TABLE leg CASCADE CONSTRAINTS;

DROP TABLE line CASCADE CONSTRAINTS;

DROP TABLE line_leg CASCADE CONSTRAINTS;

DROP TABLE line_type CASCADE CONSTRAINTS;

DROP TABLE log CASCADE CONSTRAINTS;

DROP TABLE log_incident CASCADE CONSTRAINTS;

DROP TABLE mileage_discontinuity CASCADE CONSTRAINTS;

DROP TABLE obu CASCADE CONSTRAINTS;

DROP TABLE obu_sim CASCADE CONSTRAINTS;

DROP TABLE obu_simv1 CASCADE CONSTRAINTS;

DROP TABLE obu_vehicle CASCADE CONSTRAINTS;

DROP TABLE obu_vehiclev1 CASCADE CONSTRAINTS;

DROP TABLE organization CASCADE CONSTRAINTS;

DROP TABLE point CASCADE CONSTRAINTS;

DROP TABLE rbc CASCADE CONSTRAINTS;

DROP TABLE rbc_balise CASCADE CONSTRAINTS;

DROP TABLE rbc_obu CASCADE CONSTRAINTS;

DROP TABLE rbc_obuv1 CASCADE CONSTRAINTS;

DROP TABLE reference_type CASCADE CONSTRAINTS;

DROP TABLE screen_recording CASCADE CONSTRAINTS;

DROP TABLE screen_recording_incident CASCADE CONSTRAINTS;

DROP TABLE sim CASCADE CONSTRAINTS;

DROP TABLE state CASCADE CONSTRAINTS;

DROP TABLE ticket CASCADE CONSTRAINTS;

DROP TABLE ticket_conversation CASCADE CONSTRAINTS;

DROP TABLE ticket_email CASCADE CONSTRAINTS;

DROP TABLE ticket_incident CASCADE CONSTRAINTS;

DROP TABLE ticket_state CASCADE CONSTRAINTS;

DROP TABLE ticket_train CASCADE CONSTRAINTS;

DROP TABLE track_number CASCADE CONSTRAINTS;

DROP TABLE train CASCADE CONSTRAINTS;

DROP TABLE train_leg CASCADE CONSTRAINTS;

DROP TABLE vehicle CASCADE CONSTRAINTS;

DROP TABLE vehicle_incident CASCADE CONSTRAINTS;

DROP TABLE vehicle_remark CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE balise (
    id              NUMBER(7) NOT NULL,
    n_pig           NUMBER(1) NOT NULL,
    user_data       VARCHAR2(256 CHAR),
    balise_group_id NUMBER(7) NOT NULL,
    feature_id      NUMBER(10) NOT NULL
);

CREATE UNIQUE INDEX balise__idx ON
    balise (
        feature_id
    ASC );

ALTER TABLE balise ADD CONSTRAINT balise_pk PRIMARY KEY ( id );

CREATE TABLE balise_group (
    id     NUMBER(7) NOT NULL,
    nid_c  NUMBER(5) NOT NULL,
    nid_bg NUMBER(6) NOT NULL
);

ALTER TABLE balise_group ADD CONSTRAINT balise_group_pk PRIMARY KEY ( id );

CREATE TABLE balise_type (
    id          NUMBER(3) NOT NULL,
    name        VARCHAR2(8 CHAR) NOT NULL,
    description VARCHAR2(256 CHAR)
);

ALTER TABLE balise_type ADD CONSTRAINT balise_type_pk PRIMARY KEY ( id );

CREATE TABLE balise_type_balise (
    balise_type_id NUMBER(3) NOT NULL,
    balise_id      NUMBER(7) NOT NULL,
    primary_type   NUMBER NOT NULL
);

ALTER TABLE balise_type_balise ADD CONSTRAINT balise_type_balise_pk PRIMARY KEY ( balise_type_id,
                                                                                  balise_id );

--  Assignement to either an incident or a ticket must be filled in.
CREATE TABLE "comment" (
    id          NUMBER(10) NOT NULL,
    text        VARCHAR2(1024 CHAR),
    attachement BLOB,
    ticket_id   NUMBER(15),
    incident_id NUMBER(15),
    employee_id NUMBER(8) NOT NULL
);

ALTER TABLE "comment" ADD CONSTRAINT comment_pk PRIMARY KEY ( id );

CREATE TABLE comment_comment (
    comment_id        NUMBER(10) NOT NULL,
    comment_id1       NUMBER(10) NOT NULL,
    reference_type_id NUMBER(3) NOT NULL
);

ALTER TABLE comment_comment ADD CONSTRAINT comment_comment_pk PRIMARY KEY ( comment_id,
                                                                            comment_id1 );

CREATE TABLE comment_relationship (
    id                NUMBER(20) NOT NULL,
    comment_id        NUMBER(10) NOT NULL,
    comment_id2       NUMBER(10) NOT NULL,
    reference_type_id NUMBER(3) NOT NULL
);

ALTER TABLE comment_relationship ADD CONSTRAINT comment_relationship_pk PRIMARY KEY ( id );

CREATE TABLE contact_info (
    id       NUMBER(6) NOT NULL,
    country  VARCHAR2(256 CHAR) NOT NULL,
    city     VARCHAR2(256 CHAR) NOT NULL,
    street   VARCHAR2(256 CHAR) NOT NULL,
    "number" VARCHAR2(32 CHAR) NOT NULL,
    remark   VARCHAR2(256 CHAR)
);

ALTER TABLE contact_info ADD CONSTRAINT contact_info_pk PRIMARY KEY ( id );

CREATE TABLE conversation (
    conversation_id VARCHAR2(512 CHAR) NOT NULL,
    change_key      VARCHAR2(512 CHAR) NOT NULL
);

ALTER TABLE conversation ADD CONSTRAINT conversation_pk PRIMARY KEY ( conversation_id,
                                                                      change_key );

CREATE TABLE department (
    id                 NUMBER(6) NOT NULL,
    name               VARCHAR2(128 CHAR),
    "number"           NUMBER(6),
    default_department NUMBER NOT NULL,
    carrier            NUMBER NOT NULL,
    organization_id    NUMBER(5) NOT NULL,
    abbreviation       VARCHAR2(32 CHAR)
);

ALTER TABLE department ADD CONSTRAINT department_pk PRIMARY KEY ( id );

CREATE TABLE department_contact_info (
    contact_info_id NUMBER(6) NOT NULL,
    department_id   NUMBER(6) NOT NULL
);

ALTER TABLE department_contact_info ADD CONSTRAINT department_contact_info_pk PRIMARY KEY ( contact_info_id,
                                                                                            department_id );

CREATE TABLE email (
    item_id    VARCHAR2(512 CHAR) NOT NULL,
    change_key VARCHAR2(512 CHAR) NOT NULL
);

ALTER TABLE email ADD CONSTRAINT email_pk PRIMARY KEY ( item_id,
                                                        change_key );

CREATE TABLE employee (
    id              NUMBER(8) NOT NULL,
    name            VARCHAR2(128 CHAR) NOT NULL,
    email           VARCHAR2(300 CHAR), 
--  Indicates wheather the "employee" stands for a automatic proces.
    process         NUMBER NOT NULL,
    job_position_id NUMBER(3) NOT NULL,
    department_id   NUMBER(6) NOT NULL
);

COMMENT ON COLUMN employee.process IS
    'Indicates wheather the "employee" stands for a automatic proces.';

ALTER TABLE employee ADD CONSTRAINT employee_pk PRIMARY KEY ( id );

CREATE TABLE employee_ticket_assigned (
    employee_id NUMBER(8) NOT NULL,
    ticket_id   NUMBER(15) NOT NULL,
    transfered  DATE NOT NULL
);

ALTER TABLE employee_ticket_assigned ADD CONSTRAINT employee_ticket_assigned_pk PRIMARY KEY ( employee_id,
                                                                                              ticket_id );

CREATE TABLE feature (
    id                   NUMBER(10) NOT NULL,
    name                 VARCHAR2(128 CHAR) NOT NULL,
    milepost             NUMBER(7, 3),
    minepost_approximate NUMBER NOT NULL,
    leg_id               NUMBER(12) NOT NULL,
    feature_type_id      NUMBER(5) NOT NULL
);

ALTER TABLE feature ADD CONSTRAINT feature_pk PRIMARY KEY ( id );

CREATE TABLE feature_type (
    id          NUMBER(5) NOT NULL,
    name        VARCHAR2(128 CHAR) NOT NULL,
    description VARCHAR2(128 CHAR)
);

ALTER TABLE feature_type ADD CONSTRAINT feature_type_pk PRIMARY KEY ( id );

CREATE TABLE change_log (
    id          NUMBER(18) NOT NULL,
    "table"     VARCHAR2(64 CHAR) NOT NULL,
    "column"    VARCHAR2(64 CHAR) NOT NULL,
    record      VARCHAR2(1024 BYTE) NOT NULL,
    old         RAW(1024) NOT NULL,
    new         RAW(1024) NOT NULL,
    change_time DATE NOT NULL,
    "comment"   VARCHAR2(256 CHAR),
    employee_id NUMBER(8) NOT NULL
);

ALTER TABLE change_log ADD CONSTRAINT change_log_pk PRIMARY KEY ( id );

CREATE TABLE incident (
    id      NUMBER(15) NOT NULL,
    "start" DATE,
    end     DATE
);

ALTER TABLE incident ADD CONSTRAINT incident_pk PRIMARY KEY ( id );

CREATE TABLE incident_leg (
    incident_id  NUMBER(15) NOT NULL,
    leg_id       NUMBER(12) NOT NULL,
    milepost     NUMBER(7, 3) NOT NULL,
    track_number NUMBER(1) NOT NULL
);

ALTER TABLE incident_leg ADD CONSTRAINT incident_leg_pk PRIMARY KEY ( incident_id,
                                                                      leg_id );

CREATE TABLE incident_rbc (
    rbc_id      NUMBER(20) NOT NULL,
    incident_id NUMBER(15) NOT NULL
);

ALTER TABLE incident_rbc ADD CONSTRAINT incident_rbc_pk PRIMARY KEY ( rbc_id,
                                                                      incident_id );

CREATE TABLE job_position (
    id   NUMBER(3) NOT NULL,
    name VARCHAR2(128 CHAR) NOT NULL
);

ALTER TABLE job_position ADD CONSTRAINT job_position_pk PRIMARY KEY ( id );

CREATE TABLE kmc (
    id      NUMBER(12) NOT NULL,
    name    VARCHAR2(128 CHAR) NOT NULL,
    etcs_id NUMBER(12) NOT NULL,
    nid_c   NUMBER(4) NOT NULL,
    nid_kmc NUMBER(12) NOT NULL
);

ALTER TABLE kmc ADD CONSTRAINT kmc_pk PRIMARY KEY ( id );

--  A section of track between two notes ("tarif points").
--  Can also represent station, if 'from' and 'to' atributes are identical.
CREATE TABLE leg (
    id               NUMBER(12) NOT NULL,
    number_of_tracks NUMBER(4) NOT NULL,
    point_id2        NUMBER(8) NOT NULL,
    point_id         NUMBER(8) NOT NULL
);

ALTER TABLE leg ADD CONSTRAINT leg_pk PRIMARY KEY ( id );

CREATE TABLE line (
    id           NUMBER(6) NOT NULL,
    name         VARCHAR2(6 CHAR) NOT NULL,
    line_type_id NUMBER(4) NOT NULL
);

ALTER TABLE line ADD CONSTRAINT line_pk PRIMARY KEY ( id );

CREATE TABLE line_leg (
    line_id NUMBER(6) NOT NULL,
    leg_id  NUMBER(12) NOT NULL
);

ALTER TABLE line_leg ADD CONSTRAINT line_leg_pk PRIMARY KEY ( line_id,
                                                              leg_id );

CREATE TABLE line_type (
    id   NUMBER(4) NOT NULL,
    name VARCHAR2(32 CHAR) NOT NULL
);

ALTER TABLE line_type ADD CONSTRAINT line_type_pk PRIMARY KEY ( id );

CREATE TABLE log (
    id         NUMBER(12) NOT NULL,
    file_name  VARCHAR2(256 CHAR) NOT NULL,
    "file"     BLOB NOT NULL,
    downloaded DATE NOT NULL
);

ALTER TABLE log ADD CONSTRAINT log_pk PRIMARY KEY ( id );

CREATE TABLE log_incident (
    log_id      NUMBER(12) NOT NULL,
    incident_id NUMBER(15) NOT NULL
);

ALTER TABLE log_incident ADD CONSTRAINT log_incident_pk PRIMARY KEY ( log_id,
                                                                      incident_id );

CREATE TABLE mileage_discontinuity (
    id     NUMBER(6) NOT NULL,
    value  NUMBER(7, 3) NOT NULL,
    leg_id NUMBER(12) NOT NULL
);

ALTER TABLE mileage_discontinuity ADD CONSTRAINT mileage_discontinuity_pk PRIMARY KEY ( id );

CREATE TABLE obu (
    id                           NUMBER(10) NOT NULL,
    nid_engine                   NUMBER(8) NOT NULL,
    system_version               VARCHAR2(7 CHAR) NOT NULL,
    srs                          VARCHAR2(32 CHAR),
    supplier_version_designation VARCHAR2(128 CHAR),
    remark                       VARCHAR2(128 CHAR),
    kmc_id                       NUMBER(12),
    kmc_id2                      NUMBER(12)
);

ALTER TABLE obu ADD CONSTRAINT obu_pk PRIMARY KEY ( id );

CREATE TABLE obu_sim (
    sim_id              NUMBER(25) NOT NULL,
    assigned            DATE,
    unassigned          DATE,
    history_not_tracked NUMBER NOT NULL,
    obu_id              NUMBER(10) NOT NULL
);

ALTER TABLE obu_sim ADD CONSTRAINT obu_sim_pk PRIMARY KEY ( sim_id,
                                                            obu_id );

CREATE TABLE obu_simv1 (
    sim_id              NUMBER(25) NOT NULL,
    obu_id              NUMBER(10) NOT NULL,
    assigned            DATE,
    unassigned          DATE,
    history_not_tracked NUMBER NOT NULL
);

ALTER TABLE obu_simv1 ADD CONSTRAINT obu_simv1_pk PRIMARY KEY ( sim_id,
                                                                obu_id );

CREATE TABLE obu_vehicle (
    vehicle_id  NUMBER(20) NOT NULL,
    installed   DATE,
    uninstalled DATE,
    obu_id      NUMBER(10) NOT NULL
);

ALTER TABLE obu_vehicle ADD CONSTRAINT obu_vehicle_pk PRIMARY KEY ( vehicle_id,
                                                                    obu_id );

CREATE TABLE obu_vehiclev1 (
    vehicle_id  NUMBER(20) NOT NULL,
    obu_id      NUMBER(10) NOT NULL,
    installed   DATE,
    uninstalled DATE
);

ALTER TABLE obu_vehiclev1 ADD CONSTRAINT obu_vehiclev1_pk PRIMARY KEY ( vehicle_id,
                                                                        obu_id );

CREATE TABLE organization (
    id              NUMBER(5) NOT NULL,
    name            VARCHAR2(128 CHAR) NOT NULL,
    has_departments NUMBER NOT NULL,
    abbreviation    VARCHAR2(32 CHAR)
);

ALTER TABLE organization ADD CONSTRAINT organization_pk PRIMARY KEY ( id );

CREATE TABLE point (
    id   NUMBER(8) NOT NULL,
    name VARCHAR2(128 CHAR) NOT NULL,
    lon  NUMBER(9) NOT NULL,
    lat  NUMBER(9) NOT NULL
);

ALTER TABLE point ADD CONSTRAINT point_pk PRIMARY KEY ( id );

CREATE TABLE rbc (
    id        NUMBER(20) NOT NULL,
    nid_c     NUMBER(4) NOT NULL,
    nid_rbc   NUMBER(10) NOT NULL,
    nid_radio NUMBER(16) NOT NULL,
    name      VARCHAR2(128)
);

ALTER TABLE rbc ADD CONSTRAINT rbc_pk PRIMARY KEY ( id );

CREATE TABLE rbc_balise (
    rbc_id    NUMBER(20) NOT NULL,
    balise_id NUMBER(7) NOT NULL
);

ALTER TABLE rbc_balise ADD CONSTRAINT rbc_balise_pk PRIMARY KEY ( rbc_id,
                                                                  balise_id );

--  Assigned keys
CREATE TABLE rbc_obu (
    rbc_id NUMBER(20) NOT NULL,
    obu_id NUMBER(10) NOT NULL
);

ALTER TABLE rbc_obu ADD CONSTRAINT rbc_obu_pk PRIMARY KEY ( rbc_id,
                                                            obu_id );

CREATE TABLE rbc_obuv1 (
    obu_id NUMBER(10) NOT NULL,
    rbc_id NUMBER(20) NOT NULL
);

ALTER TABLE rbc_obuv1 ADD CONSTRAINT rbc_obuv1_pk PRIMARY KEY ( obu_id,
                                                                rbc_id );

CREATE TABLE reference_type (
    id          NUMBER(3) NOT NULL,
    name        VARCHAR2(32 CHAR) NOT NULL,
    description VARCHAR2(256 CHAR)
);

ALTER TABLE reference_type ADD CONSTRAINT reference_type_pk PRIMARY KEY ( id );

CREATE TABLE screen_recording (
    id        NUMBER(12) NOT NULL,
    file_name VARCHAR2(256 CHAR) NOT NULL,
    "file"    BLOB NOT NULL,
    captured  DATE NOT NULL
);

ALTER TABLE screen_recording ADD CONSTRAINT screen_recording_pk PRIMARY KEY ( id );

CREATE TABLE screen_recording_incident (
    incident_id         NUMBER(15) NOT NULL,
    screen_recording_id NUMBER(12) NOT NULL
);

ALTER TABLE screen_recording_incident ADD CONSTRAINT screen_recording_incident_pk PRIMARY KEY ( incident_id,
                                                                                                screen_recording_id );

CREATE TABLE sim (
    id          NUMBER(25) NOT NULL,
    imsi        NUMBER(15),
    iccid       NUMBER(22),
    msisdn      VARCHAR2(16 CHAR) NOT NULL,
    issued      DATE,
    profile     VARCHAR2(256 CHAR),
    pdp         VARCHAR2(256 CHAR),
    ip          VARCHAR2(39 CHAR),
    radio_type  VARCHAR2(256 CHAR),
    remark      VARCHAR2(256 CHAR),
    employee_id NUMBER(8)
);

ALTER TABLE sim ADD CONSTRAINT sim_pk PRIMARY KEY ( id );

CREATE TABLE state (
    id          NUMBER(3) NOT NULL,
    name        VARCHAR2(32 CHAR) NOT NULL,
    description VARCHAR2(256 CHAR)
);

ALTER TABLE state ADD CONSTRAINT state_pk PRIMARY KEY ( id );

CREATE TABLE ticket (
    id              NUMBER(15) NOT NULL,
    designation     VARCHAR2(128 CHAR),
    opened          DATE NOT NULL,
    closed          DATE,
    response_needed NUMBER NOT NULL,
    resnponse_sent  DATE,
    employee_id     NUMBER(8) NOT NULL,
    employee_id2    NUMBER(8)
);

ALTER TABLE ticket ADD CONSTRAINT ticket_pk PRIMARY KEY ( id );

CREATE TABLE ticket_conversation (
    conversation_conversation_id VARCHAR2(512 CHAR) NOT NULL,
    conversation_change_key      VARCHAR2(512 CHAR) NOT NULL,
    ticket_id                    NUMBER(15) NOT NULL
);

ALTER TABLE ticket_conversation
    ADD CONSTRAINT ticket_conversatoin_pk PRIMARY KEY ( conversation_conversation_id,
                                                        conversation_change_key,
                                                        ticket_id );

CREATE TABLE ticket_email (
    email_item_id    VARCHAR2(512 CHAR) NOT NULL,
    email_change_key VARCHAR2(512 CHAR) NOT NULL,
    ticket_id        NUMBER(15) NOT NULL,
    response         NUMBER NOT NULL
);

ALTER TABLE ticket_email
    ADD CONSTRAINT ticket_email_pk PRIMARY KEY ( email_item_id,
                                                 email_change_key,
                                                 ticket_id );

CREATE TABLE ticket_incident (
    ticket_id   NUMBER(15) NOT NULL,
    incident_id NUMBER(15) NOT NULL
);

ALTER TABLE ticket_incident ADD CONSTRAINT ticket_incident_pk PRIMARY KEY ( ticket_id,
                                                                            incident_id );

CREATE TABLE ticket_state (
    ticket_id  NUMBER(15) NOT NULL,
    state_id   NUMBER(3) NOT NULL,
    change     DATE NOT NULL,
    changed_by NUMBER(8) NOT NULL
);

ALTER TABLE ticket_state ADD CONSTRAINT ticket_state_pk PRIMARY KEY ( ticket_id,
                                                                      state_id );

CREATE TABLE ticket_train (
    incident_id NUMBER(15) NOT NULL,
    train_id_1  NUMBER(20) NOT NULL
);

ALTER TABLE ticket_train ADD CONSTRAINT ticket_train_pk PRIMARY KEY ( incident_id,
                                                                      train_id_1 );

CREATE TABLE track_number (
    id       NUMBER(20) NOT NULL,
    "number" VARCHAR2(10 CHAR) NOT NULL,
    leg_id   NUMBER(12) NOT NULL,
    id2      NUMBER NOT NULL
);

ALTER TABLE track_number ADD CONSTRAINT track_number_pk PRIMARY KEY ( id );

CREATE TABLE train (
    id_1          NUMBER(20) NOT NULL,
    "date"        DATE NOT NULL,
    "number"      VARCHAR2(10 CHAR) NOT NULL,
    department_id NUMBER(6) NOT NULL
);

ALTER TABLE train ADD CONSTRAINT train_pk PRIMARY KEY ( id_1 );

--  Timetable
--  Can be "scraped" from ISOR
CREATE TABLE train_leg (
    train_id_1      NUMBER(20) NOT NULL,
    leg_id          NUMBER(12) NOT NULL,
    sequence_number NUMBER(3) NOT NULL,
    schedulled      DATE
);

ALTER TABLE train_leg ADD CONSTRAINT train_leg_pk PRIMARY KEY ( train_id_1,
                                                                leg_id );

CREATE TABLE vehicle (
    id            NUMBER(20) NOT NULL,
    uic           NUMBER(12) NOT NULL,
    department_id NUMBER(6) NOT NULL,
    id2           NUMBER(12)
);

ALTER TABLE vehicle ADD CONSTRAINT vehicle_pk PRIMARY KEY ( id );

CREATE TABLE vehicle_incident (
    vehicle_id  NUMBER(20) NOT NULL,
    incident_id NUMBER(15) NOT NULL
);

ALTER TABLE vehicle_incident ADD CONSTRAINT vehicle_incident_pk PRIMARY KEY ( vehicle_id,
                                                                              incident_id );

CREATE TABLE vehicle_remark (
    id          NUMBER(20) NOT NULL,
    text        VARCHAR2(512 CHAR) NOT NULL,
    added       DATE NOT NULL,
    deleted     DATE,
    employee_id NUMBER(8) NOT NULL,
    vehicle_id  NUMBER(20) NOT NULL
);

ALTER TABLE vehicle_remark ADD CONSTRAINT vehicle_remark_pk PRIMARY KEY ( id );

ALTER TABLE balise_type_balise
    ADD CONSTRAINT bal_type_bal_bal_type_fk FOREIGN KEY ( balise_type_id )
        REFERENCES balise_type ( id );

ALTER TABLE balise
    ADD CONSTRAINT balise_balise_group_fk FOREIGN KEY ( balise_group_id )
        REFERENCES balise_group ( id );

ALTER TABLE balise
    ADD CONSTRAINT balise_feature_fk FOREIGN KEY ( feature_id )
        REFERENCES feature ( id );

ALTER TABLE balise_type_balise
    ADD CONSTRAINT balise_type_balise_balise_fk FOREIGN KEY ( balise_id )
        REFERENCES balise ( id );

ALTER TABLE comment_comment
    ADD CONSTRAINT cmt_cmt_reference_type_fk FOREIGN KEY ( reference_type_id )
        REFERENCES reference_type ( id );

ALTER TABLE comment_relationship
    ADD CONSTRAINT cmt_rel_comment_fk FOREIGN KEY ( comment_id )
        REFERENCES "comment" ( id );

ALTER TABLE comment_relationship
    ADD CONSTRAINT cmt_rel_comment_fkv1 FOREIGN KEY ( comment_id2 )
        REFERENCES "comment" ( id );

ALTER TABLE comment_relationship
    ADD CONSTRAINT cmt_rel_reference_type_fk FOREIGN KEY ( reference_type_id )
        REFERENCES reference_type ( id );

ALTER TABLE comment_comment
    ADD CONSTRAINT comment_comment_comment_fk FOREIGN KEY ( comment_id )
        REFERENCES "comment" ( id );

ALTER TABLE comment_comment
    ADD CONSTRAINT comment_comment_comment_fkv1 FOREIGN KEY ( comment_id1 )
        REFERENCES "comment" ( id );

ALTER TABLE "comment"
    ADD CONSTRAINT comment_employee_fk FOREIGN KEY ( employee_id )
        REFERENCES employee ( id );

ALTER TABLE "comment"
    ADD CONSTRAINT comment_incident_fk FOREIGN KEY ( incident_id )
        REFERENCES incident ( id );

ALTER TABLE "comment"
    ADD CONSTRAINT comment_ticket_fk FOREIGN KEY ( ticket_id )
        REFERENCES ticket ( id );

ALTER TABLE department
    ADD CONSTRAINT department_organization_fk FOREIGN KEY ( organization_id )
        REFERENCES organization ( id );

ALTER TABLE department_contact_info
    ADD CONSTRAINT dept_cntct_info_cntct_info_fk FOREIGN KEY ( contact_info_id )
        REFERENCES contact_info ( id );

ALTER TABLE department_contact_info
    ADD CONSTRAINT dept_contact_info_dept_fk FOREIGN KEY ( department_id )
        REFERENCES department ( id );

ALTER TABLE employee_ticket_assigned
    ADD CONSTRAINT emp_ticket_assigned_emp_fk FOREIGN KEY ( employee_id )
        REFERENCES employee ( id );

ALTER TABLE employee_ticket_assigned
    ADD CONSTRAINT emp_ticket_assigned_ticket_fk FOREIGN KEY ( ticket_id )
        REFERENCES ticket ( id );

ALTER TABLE employee
    ADD CONSTRAINT employee_department_fk FOREIGN KEY ( department_id )
        REFERENCES department ( id );

ALTER TABLE employee
    ADD CONSTRAINT employee_job_position_fk FOREIGN KEY ( job_position_id )
        REFERENCES job_position ( id );

ALTER TABLE feature
    ADD CONSTRAINT feature_feature_type_fk FOREIGN KEY ( feature_type_id )
        REFERENCES feature_type ( id );

ALTER TABLE feature
    ADD CONSTRAINT feature_leg_fk FOREIGN KEY ( leg_id )
        REFERENCES leg ( id );

ALTER TABLE change_log
    ADD CONSTRAINT change_log_employee_fk FOREIGN KEY ( employee_id )
        REFERENCES employee ( id );

ALTER TABLE incident_leg
    ADD CONSTRAINT incident_leg_incident_fk FOREIGN KEY ( incident_id )
        REFERENCES incident ( id );

ALTER TABLE incident_leg
    ADD CONSTRAINT incident_leg_leg_fk FOREIGN KEY ( leg_id )
        REFERENCES leg ( id );

ALTER TABLE incident_rbc
    ADD CONSTRAINT incident_rbc_incident_fk FOREIGN KEY ( incident_id )
        REFERENCES incident ( id );

ALTER TABLE incident_rbc
    ADD CONSTRAINT incident_rbc_rbc_fk FOREIGN KEY ( rbc_id )
        REFERENCES rbc ( id );

ALTER TABLE leg
    ADD CONSTRAINT leg_point_fk FOREIGN KEY ( point_id )
        REFERENCES point ( id );

ALTER TABLE leg
    ADD CONSTRAINT leg_point_fkv2 FOREIGN KEY ( point_id2 )
        REFERENCES point ( id );

ALTER TABLE line_leg
    ADD CONSTRAINT line_leg_leg_fk FOREIGN KEY ( leg_id )
        REFERENCES leg ( id );

ALTER TABLE line_leg
    ADD CONSTRAINT line_leg_line_fk FOREIGN KEY ( line_id )
        REFERENCES line ( id );

ALTER TABLE line
    ADD CONSTRAINT line_line_type_fk FOREIGN KEY ( line_type_id )
        REFERENCES line_type ( id );

ALTER TABLE log_incident
    ADD CONSTRAINT log_incident_incident_fk FOREIGN KEY ( incident_id )
        REFERENCES incident ( id );

ALTER TABLE log_incident
    ADD CONSTRAINT log_incident_log_fk FOREIGN KEY ( log_id )
        REFERENCES log ( id );

ALTER TABLE mileage_discontinuity
    ADD CONSTRAINT mileage_discontinuity_leg_fk FOREIGN KEY ( leg_id )
        REFERENCES leg ( id );

ALTER TABLE obu
    ADD CONSTRAINT obu_kmc_fk FOREIGN KEY ( kmc_id )
        REFERENCES kmc ( id );

ALTER TABLE obu
    ADD CONSTRAINT obu_kmc_fkv2 FOREIGN KEY ( kmc_id2 )
        REFERENCES kmc ( id );

ALTER TABLE obu_sim
    ADD CONSTRAINT obu_sim_obu_fk FOREIGN KEY ( obu_id )
        REFERENCES obu ( id );

ALTER TABLE obu_sim
    ADD CONSTRAINT obu_sim_sim_fk FOREIGN KEY ( sim_id )
        REFERENCES sim ( id );

ALTER TABLE obu_simv1
    ADD CONSTRAINT obu_simv1_obu_fk FOREIGN KEY ( obu_id )
        REFERENCES obu ( id );

ALTER TABLE obu_simv1
    ADD CONSTRAINT obu_simv1_sim_fk FOREIGN KEY ( sim_id )
        REFERENCES sim ( id );

ALTER TABLE obu_vehicle
    ADD CONSTRAINT obu_vehicle_obu_fk FOREIGN KEY ( obu_id )
        REFERENCES obu ( id );

ALTER TABLE obu_vehicle
    ADD CONSTRAINT obu_vehicle_vehicle_fk FOREIGN KEY ( vehicle_id )
        REFERENCES vehicle ( id );

ALTER TABLE obu_vehiclev1
    ADD CONSTRAINT obu_vehiclev1_obu_fk FOREIGN KEY ( obu_id )
        REFERENCES obu ( id );

ALTER TABLE obu_vehiclev1
    ADD CONSTRAINT obu_vehiclev1_vehicle_fk FOREIGN KEY ( vehicle_id )
        REFERENCES vehicle ( id );

ALTER TABLE rbc_balise
    ADD CONSTRAINT rbc_balise_balise_fk FOREIGN KEY ( balise_id )
        REFERENCES balise ( id );

ALTER TABLE rbc_balise
    ADD CONSTRAINT rbc_balise_rbc_fk FOREIGN KEY ( rbc_id )
        REFERENCES rbc ( id );

ALTER TABLE rbc_obu
    ADD CONSTRAINT rbc_obu_obu_fk FOREIGN KEY ( obu_id )
        REFERENCES obu ( id );

ALTER TABLE rbc_obu
    ADD CONSTRAINT rbc_obu_rbc_fk FOREIGN KEY ( rbc_id )
        REFERENCES rbc ( id );

ALTER TABLE rbc_obuv1
    ADD CONSTRAINT rbc_obuv1_obu_fk FOREIGN KEY ( obu_id )
        REFERENCES obu ( id );

ALTER TABLE rbc_obuv1
    ADD CONSTRAINT rbc_obuv1_rbc_fk FOREIGN KEY ( rbc_id )
        REFERENCES rbc ( id );

ALTER TABLE screen_recording_incident
    ADD CONSTRAINT scr_rec_incident_incident_fk FOREIGN KEY ( incident_id )
        REFERENCES incident ( id );

ALTER TABLE screen_recording_incident
    ADD CONSTRAINT scr_rec_incident_scr_rec_fk FOREIGN KEY ( screen_recording_id )
        REFERENCES screen_recording ( id );

ALTER TABLE sim
    ADD CONSTRAINT sim_employee_fk FOREIGN KEY ( employee_id )
        REFERENCES employee ( id );

ALTER TABLE ticket_conversation
    ADD CONSTRAINT ticket_conv_conv_fk FOREIGN KEY ( conversation_conversation_id,
                                                     conversation_change_key )
        REFERENCES conversation ( conversation_id,
                                  change_key );

ALTER TABLE ticket_conversation
    ADD CONSTRAINT ticket_conversatoin_ticket_fk FOREIGN KEY ( ticket_id )
        REFERENCES ticket ( id );

ALTER TABLE ticket_email
    ADD CONSTRAINT ticket_email_email_fk FOREIGN KEY ( email_item_id,
                                                       email_change_key )
        REFERENCES email ( item_id,
                           change_key );

ALTER TABLE ticket_email
    ADD CONSTRAINT ticket_email_ticket_fk FOREIGN KEY ( ticket_id )
        REFERENCES ticket ( id );

ALTER TABLE ticket
    ADD CONSTRAINT ticket_employee_fk FOREIGN KEY ( employee_id )
        REFERENCES employee ( id );

ALTER TABLE ticket
    ADD CONSTRAINT ticket_employee_fkv2 FOREIGN KEY ( employee_id2 )
        REFERENCES employee ( id );

ALTER TABLE ticket_incident
    ADD CONSTRAINT ticket_incident_incident_fk FOREIGN KEY ( incident_id )
        REFERENCES incident ( id );

ALTER TABLE ticket_incident
    ADD CONSTRAINT ticket_incident_ticket_fk FOREIGN KEY ( ticket_id )
        REFERENCES ticket ( id );

ALTER TABLE ticket_state
    ADD CONSTRAINT ticket_state_state_fk FOREIGN KEY ( state_id )
        REFERENCES state ( id );

ALTER TABLE ticket_state
    ADD CONSTRAINT ticket_state_ticket_fk FOREIGN KEY ( ticket_id )
        REFERENCES ticket ( id );

ALTER TABLE ticket_train
    ADD CONSTRAINT ticket_train_incident_fk FOREIGN KEY ( incident_id )
        REFERENCES incident ( id );

ALTER TABLE ticket_train
    ADD CONSTRAINT ticket_train_train_fk FOREIGN KEY ( train_id_1 )
        REFERENCES train ( id_1 );

ALTER TABLE track_number
    ADD CONSTRAINT track_number_leg_fk FOREIGN KEY ( leg_id )
        REFERENCES leg ( id );

ALTER TABLE train
    ADD CONSTRAINT train_department_fk FOREIGN KEY ( department_id )
        REFERENCES department ( id );

ALTER TABLE train_leg
    ADD CONSTRAINT train_leg_leg_fk FOREIGN KEY ( leg_id )
        REFERENCES leg ( id );

ALTER TABLE train_leg
    ADD CONSTRAINT train_leg_train_fk FOREIGN KEY ( train_id_1 )
        REFERENCES train ( id_1 );

ALTER TABLE vehicle
    ADD CONSTRAINT vehicle_department_fk FOREIGN KEY ( department_id )
        REFERENCES department ( id );

ALTER TABLE vehicle_incident
    ADD CONSTRAINT vehicle_incident_incident_fk FOREIGN KEY ( incident_id )
        REFERENCES incident ( id );

ALTER TABLE vehicle_incident
    ADD CONSTRAINT vehicle_incident_vehicle_fk FOREIGN KEY ( vehicle_id )
        REFERENCES vehicle ( id );

ALTER TABLE vehicle_remark
    ADD CONSTRAINT vehicle_remark_employee_fk FOREIGN KEY ( employee_id )
        REFERENCES employee ( id );

ALTER TABLE vehicle_remark
    ADD CONSTRAINT vehicle_remark_vehicle_fk FOREIGN KEY ( vehicle_id )
        REFERENCES vehicle ( id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            57
-- CREATE INDEX                             1
-- ALTER TABLE                            132
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
